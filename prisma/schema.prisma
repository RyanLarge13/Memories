// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Memory {
  id String @id @unique @default(uuid())
  desc String
  title String
  userId String
  imageUrls String[]
  location String?
  when DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  likes LikedPhoto[]
  comments Comment[]
  @@index([userId])
}

model Comment {
  id String @id @unique @default(uuid())
  userId String
  memoryId String
  text String
  createdAt DateTime @default(now())
  memory Memory @relation(fields: [memoryId], references: [id], onDelete: Cascade)
  @@index([userId])
}

model UserSettings {
  id String @id @unique @default(uuid())
  userId String @unique
  title String?
  location String?
  bio String?
  link String?
  followers String[]
  following String[]
  likedPhotos LikedPhoto[]
  @@index([userId])
}

model LikedPhoto {
  id String @id @unique @default(uuid())
  userId String
  memoryId String
  user UserSettings @relation(fields: [userId], references: [userId], onDelete: Cascade)
  memory Memory @relation(fields: [memoryId], references: [id], onDelete: Cascade)
}